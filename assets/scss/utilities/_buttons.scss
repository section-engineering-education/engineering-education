
// Button Classes
// --------------------------------------------------

// Reset Button
// -------------------------
// In an article on CSS-Tricks
// (http://css-tricks.com/use-button-element/),
// Chris Coyier explains that:
// "if a button doesn’t have a meaningful
// href, it’s a <button>"; which makes sense.

// This placeholder resets <button>'s
// default styling, so we can use
// <button>s where it makes without
// worrying about the styling.

@mixin button-reset {
  background-color: transparent;
  // Reset unusual Firefox-on-Android default style;
  // https://github.com/necolas/normalize.css/issues/214
  background-image: none;
  cursor: pointer;
  padding: 0;

  &:active {
    outline: 0;
  }
}

@mixin button {
  @include font-smoothing;
  @include button-reset;
  @include gt-medium;
  cursor: pointer;
  display: block;
  align-items: center;
  justify-content: center;
  text-align: center;
  text-decoration: none;

  @include mq($from: 520px) {
    display: inline-block;
    width: auto;
  }
}

@mixin button-light {
  @include font-smoothing;
  @include button-reset;
  @include gt-regular;
  cursor: pointer;
  display: block;
  align-items: center;
  justify-content: center;
  text-align: center;
  text-decoration: none;

  @include mq($from: 520px) {
    display: inline-block;
    width: auto;
  }
}

.button {
  @include button;
}

.button-light {
  @include button-light;
}

.button-link {

  &-arrow {

    &:after {
      background-image: url("data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='15px' height='14px' viewBox='0 0 15 14' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3C!-- Generator: Sketch 52.6 (67491) - http://www.bohemiancoding.com/sketch --%3E%3Ctitle%3EGroup 7%3C/title%3E%3Cdesc%3ECreated with Sketch.%3C/desc%3E%3Cg id='Blocks' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cg id='Spread-Block-1/2' transform='translate(-1092.000000, -479.000000)' fill-rule='nonzero'%3E%3Cg id='Group-15' transform='translate(753.000000, 462.000000)'%3E%3Cg id='Group-2' transform='translate(244.000000, 8.000000)'%3E%3Cg id='Group-7' transform='translate(95.000000, 10.000000)'%3E%3Cg id='Group-25'%3E%3Crect id='Rectangle' fill='%2309090B' x='0' y='5' width='12' height='2'%3E%3C/rect%3E%3Cpolyline id='Path' stroke='%2309090B' stroke-width='2' transform='translate(7.071068, 6.071068) rotate(-225.000000) translate(-7.071068, -6.071068) ' points='3.07106781 10.0710678 3.07106781 2.07106781 11.0710678 2.07106781'%3E%3C/polyline%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
      background-size: cover;
      content: "";
      display: inline-block;
      height: pxem(12);
      margin-left: pxem(8);
      transition: margin 240ms $t-1;
      width: pxem(13);
    }

    &:hover {

      &:after {
        margin-left: pxem(12);
      }
    }
  }
}

@mixin button-medium {
  font-size: pxem(16);
  line-height: pxem(9);
  padding: pxem(18) pxem(32) pxem(19);
}

.button-small {
  font-size: pxem(16);
  line-height: pxem(9);
  padding: pxem(12) pxem(16) pxem(13);
}

.button-small-nav {
  font-size: pxem(16);
  line-height: pxem(9);
  padding: 32px pxem(18) 32px;
  border-top: pxem(3) solid transparent;
  border-bottom: pxem(3) solid transparent;

  &:hover {
    background: $fill-bg;
    border-bottom-color: $fill-black;
  }

  &:active {
    color: $text-green;
    border-bottom-color: $fill-black;
  }
}

.button-nav {
  font-size: pxem(16);
  line-height: pxem(9);
  padding: pxem(13) pxem(19.5) pxem(14);

  &:hover {
    background: $fill-green;
    color: $text-white;
  }
}

.button-medium{
  @include button-medium;
}

@mixin button-orange {
  background-color: $text-orange;
  color: $text-white;
  border:none;
}

@mixin button-blue {
  background-color: $fill-blue;
  color: $text-white;
  border: none;
  transition: background-color 240ms $t-1;

  &:hover {
    background-color: darken$fill-blue, 10%();
  }
}

@mixin button-purple {
  background-color: $fill-purple;
  color: $text-white;
  border: none;
  transition: background-color 240ms $t-1;

  &:hover {
    background-color: darken($fill-purple, 10%);
  }
}

@mixin button-green {
  background-color: $fill-green;
  color: $text-white;
  border:none;
  transition: background-color 240ms $t-1;

  &:hover {
    background-color: darken($fill-green, 10%);
  }
}

@mixin button-ltgreen {
  background-color: $fill-ltgreen;
  color: $text-white;
  border:none;
  transition: background-color 240ms $t-1;

  &:hover {
    background-color: darken($fill-ltgreen, 10%);
  }
}

@mixin button-gray {
  background-color: #999999;
  color: $text-white;
  border:none;
  transition: background-color 240ms $t-1 ;

  &:hover {
    background-color: darken(#999999, 10%);
  }
}

@mixin button-disabled {
  background-color: #999999;
  color: $text-white;
  pointer-events: none;
  border:none;
  transition: background-color 240ms $t-1 ;

  &:hover {
    background-color: #999999;
  }
}

.button-disabled,
button[disabled] {
  @include button-disabled;
}

.button-green{
  @include button-green;
}

.button-ltgreen{
  @include button-ltgreen;
}

.button-blue {
  @include button-blue;
}

.button-purple {
  @include button-purple;
}

.button-orange{
  @include button-orange;
}

.button-white {
  background-color: $fill-white;
}

.button-group {
  display: flex;
  align-items: center;
  flex-direction: column;

  .button {
    width: 100%;

    @include mq($from: 520px ) {
      width: auto;
    }
  }

  @include mq($from: 520px ) {
    flex-direction: row;
  }
}

.button-group-mobile {
  display: flex;
  flex-direction: column;
  margin-top: auto;
}

.button-text {

  &:hover {
    text-decoration: underline;
  }
}

.button-outline {
  border: 1px solid #00A86B;
  color: #00A86B;

  &:hover {
    box-shadow: 0 pxem(4) pxem(9) 0 rgba(0, 0, 0, 0.15);
  }
}

.button-outline-white {
  border: 2px solid $fill-white;
  color: $text-white;
  width: 100%;

  &:hover {
    box-shadow: 0 pxem(4) pxem(9) 0 rgba(0, 0, 0, 0.15);
    background: $fill-white;
    color: $text-green;
  }
}
